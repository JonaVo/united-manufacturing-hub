{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"lodash\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./datasource.ts","webpack:///./ConfigEditor.tsx","webpack:///./types.ts","webpack:///./components/values/AggregatedStates.tsx","webpack:///./QueryEditor.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","instanceSettings","DataSource","SecretFormField","FormField","onCustomerChange","event","props","onOptionsChange","options","jsonData","customerId","target","onServerChange","serverURL","onAPIKeyChange","secureJsonData","apiKey","onResetAPIKey","secureJsonFields","render","className","label","labelWidth","inputWidth","onChange","placeholder","isConfigured","onReset","defaultQuery","location","index","asset","parameterString","labelsField","isCommand","onIncludeRunningChange","state","includeRunning","setState","initialState","split","map","parameter","keyValuePair","console","log","css","disabled","onLocationChange","selectedLocation","selectedAsset","selectedValue","setAssetsOptions","assetArray","assetIndex","newAssetLabel","newAssetOptions","assetOptions","onAssetChange","setValueOptions","valueArray","valueIndex","newValue","newValueOptions","metric","valueOptions","setParameters","onValueChange","newParameterString","updateChart","onParametersChange","onIsCommandChange","query","onRunQuery","getParameterComponents","onLabelsFieldNameChange","useColumnAsFieldNames","locationOptions","customParameters","onClick","setConfigEditor","setQueryEditor"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { DataSourceInstanceSettings } from '@grafana/data';\nimport { DataSourceWithBackend } from '@grafana/runtime';\nimport { MyDataSourceOptions, MyQuery } from './types';\n\nexport class DataSource extends DataSourceWithBackend<MyQuery, MyDataSourceOptions> {\n  constructor(instanceSettings: DataSourceInstanceSettings<MyDataSourceOptions>) {\n    super(instanceSettings);\n  }\n}\n","import React, { ChangeEvent, PureComponent } from 'react';\nimport { LegacyForms } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { MyDataSourceOptions, MySecureJsonData } from './types';\n\nconst { SecretFormField, FormField } = LegacyForms;\n\ninterface Props extends DataSourcePluginOptionsEditorProps<MyDataSourceOptions> {}\n\ninterface State {}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  onCustomerChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      customerId: event.target.value,\n    };\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  onServerChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      serverURL: event.target.value,\n    };\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  // Secure field (only sent to the backend)\n  onAPIKeyChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    onOptionsChange({\n      ...options,\n      secureJsonData: {\n        ...options.secureJsonData,\n        apiKey: event.target.value,\n      },\n    });\n  };\n\n  onResetAPIKey = () => {\n    const { onOptionsChange, options } = this.props;\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        apiKey: false,\n      },\n      secureJsonData: {\n        ...options.secureJsonData,\n        apiKey: '',\n      },\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { jsonData, secureJsonFields } = options;\n    const secureJsonData = (options.secureJsonData || {}) as MySecureJsonData;\n\n    return (\n      <div className=\"gf-form-group\">\n        <h3 className=\"page-heading\">Customer name</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <FormField\n              label=\"API path\"\n              labelWidth={6}\n              inputWidth={20}\n              onChange={this.onServerChange}\n              value={jsonData.serverURL || ''}\n              placeholder=\"factoryinsight.factoryinsight\"\n            />\n          </div>\n          <div className=\"gf-form\">\n            <FormField\n              label=\"Customer ID\"\n              labelWidth={6}\n              inputWidth={20}\n              onChange={this.onCustomerChange}\n              value={jsonData.customerId || ''}\n              placeholder=\"factoryinsight\"\n            />\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <SecretFormField\n                isConfigured={(secureJsonFields && secureJsonFields.apiKey) as boolean}\n                value={secureJsonData.apiKey || ''}\n                label=\"API Key\"\n                placeholder=\"secure json field (backend only)\"\n                labelWidth={6}\n                inputWidth={20}\n                onReset={this.onResetAPIKey}\n                onChange={this.onAPIKeyChange}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { DataQuery, DataSourceJsonData } from '@grafana/data';\n\nexport interface MyQuery extends DataQuery {\n  location: { label: string; index: number };\n  asset: { label: string; index: number };\n  value: { label: string; index: number };\n  parameterString: string;\n  labelsField: string;\n  isCommand: boolean;\n}\n\nexport const defaultQuery: Partial<MyQuery> = {\n  location: { label: '', index: 0 },\n  asset: { label: '', index: 0 },\n  value: { label: '', index: 0 },\n  parameterString: '',\n  labelsField: '',\n  isCommand: false,\n};\n\n/**\n * These are options configured for each DataSource instance\n */\nexport interface MyDataSourceOptions extends DataSourceJsonData {\n  customerId: string;\n  apiPath: string;\n  serverURL: string;\n\n  // Variables to store the last query\n  lastLocationIndex: number;\n  lastAssetIndex: number;\n  lastValueIndex: number;\n}\n\n/**\n * Value that is used in the backend, but never sent over HTTP to the frontend\n */\nexport interface MySecureJsonData {\n  apiKey?: string;\n}\n","import React, { Component } from 'react';\nimport { Switch } from '@grafana/ui';\n\ntype Props = {\n  value: string;\n  onChange: Function;\n};\n\ntype State = {\n  includeRunning: boolean;\n};\n\n// Sets the defaults when the component is loaded\nexport function aggregatedStatesDefaultString(): string {\n  return '&includeRunning=false';\n}\n\nexport class AggregatedStates extends Component<Props, State> {\n  constructor(props: any) {\n    // Initialise\n    super(props);\n\n    // Parse passed string and initialise state\n    let initialState = false;\n    try {\n      const urlParameters = this.props.value.split('&');\n      urlParameters.map(parameter => {\n        const keyValuePair = parameter.split('=');\n        // Look for inlude running\n        if (keyValuePair[0] === 'includeRunning') {\n          if (keyValuePair[1] === 'true' || keyValuePair[1] === 'True') {\n            initialState = true;\n          }\n        }\n      });\n    } catch {\n      console.log('Wrong aggregatedStates parameters. It must either be includeRunning=true or includeRunning=false ');\n    }\n    this.state = {\n      includeRunning: initialState,\n    };\n  }\n\n  onIncludeRunningChange = () => {\n    let parameterString = `&includeRunning=${!this.state.includeRunning}`;\n    this.setState({\n      includeRunning: !this.state.includeRunning,\n    });\n    this.props.onChange(parameterString);\n  };\n\n  render() {\n    return (\n      <div className=\"gf-form\">\n        <label className=\"gf-form-label with-5 query-keyword\">Include Running</label>\n        <Switch css=\"\" disabled={false} value={this.state.includeRunning} onChange={this.onIncludeRunningChange} />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent, MouseEvent, ChangeEvent } from 'react';\nimport { Switch, Select, Input, Button } from '@grafana/ui';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { DataSource } from './datasource';\nimport { MyDataSourceOptions, MyQuery, defaultQuery } from './types';\n\nimport { AggregatedStates, aggregatedStatesDefaultString } from 'components/values/AggregatedStates';\nimport { defaults } from 'lodash';\n\ntype Props = QueryEditorProps<DataSource, MyQuery, MyDataSourceOptions>;\ntype State = {\n  selectedLocation: { label: string; index: number };\n  selectedAsset: { label: string; index: number };\n  selectedValue: { label: string; index: number };\n  labelsField: string;\n  locationOptions: Array<SelectableValue<number>>;\n  assetOptions: Array<SelectableValue<number>>;\n  valueOptions: Array<SelectableValue<number>>;\n  parameterString: string;\n  isCommand: boolean;\n};\n\nexport class QueryEditor extends PureComponent<Props, State> {\n  constructor(props: Readonly<Props>) {\n    super(props);\n    // Default values while we wait for the server's response\n    // Using this.props.query... to restore the previous values\n    const query = defaults(this.props.query, defaultQuery);\n    this.state = {\n      selectedLocation: query.location,\n      selectedAsset: query.asset,\n      selectedValue: query.value,\n      labelsField: query.labelsField,\n      locationOptions: [{ label: '', value: 0 }],\n      assetOptions: [{ label: '', value: 0 }],\n      valueOptions: [{ label: '', value: 0 }],\n      parameterString: query.parameterString,\n      isCommand: query.isCommand,\n    };\n\n    // Get locations related to the configured customer\n    // This assumes that the server resturns an array of strings:\n    // ['location1', 'location2', ...]\n    /* this.props.datasource.getLocations((locationArray: any[]) => { */\n    /*   // Get default or previous value */\n    /*   const locationIndex = this.state.selectedLocation.index; */\n\n    /*   // Update state with new location options */\n    /*   const newLocationLabel = locationArray[locationIndex]; */\n    /*   const newLocationOptions = locationArray.map((location, index) => { */\n    /*     return { label: location, value: index }; */\n    /*   }); */\n    /*   this.setState({ */\n    /*     selectedLocation: { label: newLocationLabel, index: locationIndex }, */\n    /*     locationOptions: newLocationOptions, */\n    /*   }); */\n\n    /*   // Get from server the assets related to the chosen location */\n    /*   /1* this.props.datasource.getAssets(newLocationLabel, this.setAssetsOptions); *1/ */\n    /* }); */\n  }\n\n  // Event handler for the location dropdown\n  onLocationChange = (event: SelectableValue<number>) => {\n    // Prevent change if the currently selected location was reclicked\n    if (event.value === this.state.selectedLocation.index) {\n      return;\n    }\n\n    // Update the state with the selected location. When the location\n    // changes, everything else resets.\n    this.setState({\n      selectedLocation: { label: event.label || '', index: event.value || 0 },\n      selectedAsset: { label: '', index: 0 },\n      selectedValue: { label: '', index: 0 },\n      parameterString: '',\n    });\n    // Update the location-related assets from the server\n    /* this.props.datasource.getAssets(event.label || '', this.setAssetsOptions); */\n  };\n\n  // This assumes that the server resturns an array of strings:\n  // ['asset1', 'asset2', ...]\n  setAssetsOptions = (assetArray: any[]) => {\n    // Get the last asset\n    const assetIndex = this.state.selectedAsset.index;\n\n    // Update state with new asset options\n    const newAssetLabel = assetArray[assetIndex];\n    const newAssetOptions = assetArray.map((asset, index) => {\n      return { label: asset, value: index };\n    });\n    this.setState({\n      selectedAsset: { label: newAssetLabel, index: assetIndex },\n      assetOptions: newAssetOptions,\n    });\n\n    // Get the location-asset-related values from the server\n    /* this.props.datasource.getValues(this.state.selectedLocation.label, newAssetLabel, this.setValueOptions); */\n  };\n\n  // Event handler for the asset dropdown\n  onAssetChange = (event: SelectableValue<number>) => {\n    // Prevent change if the currently selected asset was reclicked\n    if (event.value === this.state.selectedAsset.index) {\n      return;\n    }\n\n    // Update the state with the selected asset. If the asset changes\n    // only the value and the parameter string are reset.\n    this.setState({\n      selectedAsset: { label: event.label || '', index: event.value || 0 },\n      selectedValue: { label: '', index: 0 },\n      parameterString: '',\n    });\n\n    // Get the location-asset-related values from the server\n    /* this.props.datasource.getValues(this.state.selectedLocation.label, event.label || '', this.setValueOptions); */\n  };\n\n  // Update the state with the selected asset\n  setValueOptions = (valueArray: any[]) => {\n    // Get the last value\n    const valueIndex = this.state.selectedValue.index;\n\n    // Update state with new value options\n    const newValue = { label: valueArray[valueIndex] || '', index: valueIndex };\n    // Renaming value to metric inside this function because\n    // the options object has a 'value' key.\n    const newValueOptions = valueArray.map((metric, index) => {\n      return { label: metric, value: index };\n    });\n    this.setState({\n      selectedValue: newValue,\n      valueOptions: newValueOptions,\n    });\n\n    // Update the default parameter string and update the chart\n    this.setParameters(newValue);\n  };\n\n  // Handle value dropdown changes\n  onValueChange = (event: SelectableValue<number>) => {\n    // Prevent change if the currently selected asset was reclicked\n    if (event.value === this.state.selectedValue.index) {\n      return;\n    }\n\n    // Update the state with the selected value. If the value changes\n    // only the paremeter string is reset\n    const newValue = { label: event.label || '', index: event.value || 0 };\n    this.setState({\n      selectedValue: newValue,\n      parameterString: '',\n    });\n\n    // Get the location-asset-value-related parameters\n    this.setParameters(newValue);\n  };\n\n  // TODO handle parameters properly with a data model or something\n  setParameters = (value: { label: string; index: number }) => {\n    let newParameterString = this.state.parameterString;\n    if (value.label === 'aggregatedStates') {\n      if (this.state.parameterString === '') {\n        newParameterString = aggregatedStatesDefaultString();\n        this.setState({\n          parameterString: newParameterString,\n        });\n      }\n    }\n\n    // Get the location-asset-value-related datapoints from the server\n    // and update the default parameter string\n    this.updateChart(value, newParameterString);\n  };\n\n  // Handle parameters change\n  onParametersChange = (parameterString: string) => {\n    // Update the state with the new parameters\n    const newParameterString = parameterString;\n    this.setState({\n      parameterString: newParameterString,\n    });\n\n    // Update chart\n    this.updateChart(this.state.selectedValue, newParameterString);\n  };\n\n  // Handle isCommand change\n  onIsCommandChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onChange, query, onRunQuery } = this.props;\n\n    // Update the state with the new parameters\n    this.setState({\n      isCommand: !this.state.isCommand,\n    });\n    console.log(this.state.isCommand);\n\n    onChange({\n      ...query,\n      location: this.state.selectedLocation,\n      asset: this.state.selectedAsset,\n      value: this.state.selectedValue,\n      parameterString: this.state.parameterString,\n      labelsField: this.state.labelsField,\n      isCommand: this.state.isCommand,\n    });\n    // executes the query\n    onRunQuery();\n  };\n\n  // Get value-related parameters\n  getParameterComponents = () => {\n    if (this.state.selectedValue.label === 'aggregatedStates') {\n      return (\n        <div>\n          <span className=\"gf-form-pre\">Value parameters</span>\n          <div className=\"gf-form\">\n            <AggregatedStates value={this.state.parameterString} onChange={this.onParametersChange} />\n          </div>\n        </div>\n      );\n    } else {\n      this.setState({\n        parameterString: '',\n      });\n      return <div />;\n    }\n  };\n\n  // Update chart values. The value parameter is required to avoid\n  // waiting for the state to be updated asynchronously\n  updateChart = (value: { label: string; index: number }, parameterString = '') => {\n    const { onChange, query, onRunQuery } = this.props;\n    onChange({\n      ...query,\n      location: this.state.selectedLocation,\n      asset: this.state.selectedAsset,\n      value: value,\n      parameterString: parameterString,\n      labelsField: this.state.labelsField,\n    });\n    // executes the query\n    onRunQuery();\n  };\n\n  onLabelsFieldNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    // Update the labels field\n    this.setState({\n      labelsField: event.target.value,\n    });\n  };\n\n  useColumnAsFieldNames = (event: MouseEvent<HTMLButtonElement>) => {\n    // Update the chart\n    this.updateChart(this.state.selectedValue, this.state.parameterString);\n  };\n\n  render() {\n    let customParameters = this.getParameterComponents();\n    return (\n      <div className=\"gf-form-group\">\n        <span className=\"gf-form-pre\">Query parameters</span>\n        <div className=\"gf-form\">\n          <label className=\"gf-form-label\">Location</label>\n          <Select\n            options={this.state.locationOptions}\n            onChange={this.onLocationChange}\n            value={this.state.selectedLocation.index}\n          />\n          <label className=\"gf-form-label\">Asset</label>\n          <Select\n            options={this.state.assetOptions}\n            onChange={this.onAssetChange}\n            value={this.state.selectedAsset.index}\n          />\n          <label className=\"gf-form-label\">Value</label>\n          <Select\n            options={this.state.valueOptions}\n            onChange={this.onValueChange}\n            value={this.state.selectedValue.index}\n          />\n        </div>\n        {customParameters}\n        <div className=\"gf-form\">\n          <label className=\"gf-form-label with-5 query-keyword\">DEBUG COMMAND</label>\n          <Switch css=\"\" disabled={false} value={this.state.isCommand} onChange={this.onIsCommandChange} />\n        </div>\n        <span className=\"gf-form-pre\">Transformations</span>\n        <div className=\"gf-form\">\n          <label className=\"gf-form-label\">Labels field</label>\n          <Input\n            css=\"\"\n            placeholder=\"Name of the field to be used as column names.\"\n            onChange={this.onLabelsFieldNameChange}\n            value={this.state.labelsField}\n          />\n          <Button onClick={this.useColumnAsFieldNames}>Apply</Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './datasource';\nimport { ConfigEditor } from './ConfigEditor';\nimport { QueryEditor } from './QueryEditor';\nimport { MyQuery, MyDataSourceOptions } from './types';\n\nexport const plugin = new DataSourcePlugin<DataSource, MyQuery, MyDataSourceOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n"],"sourceRoot":""}